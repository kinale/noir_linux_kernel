diff --git a/fs/dcache.c b/fs/dcache.c
index 6ebccba33336..d4149ce19c7e 100644
--- a/fs/dcache.c
+++ b/fs/dcache.c
@@ -71,7 +71,7 @@
  * If no ancestor relationship:
  * arbitrary, since it's serialized on rename_lock
  */
-int sysctl_vfs_cache_pressure __read_mostly = 100;
+int sysctl_vfs_cache_pressure __read_mostly = 50;
 EXPORT_SYMBOL_GPL(sysctl_vfs_cache_pressure);
 
 __cacheline_aligned_in_smp DEFINE_SEQLOCK(rename_lock);

diff --git a/block/elevator.c b/block/elevator.c
index cd1a2c9881bc60..200eb60c8e8b52 100644
--- a/block/elevator.c
+++ b/block/elevator.c
@@ -568,15 +568,17 @@ static inline bool elv_support_iosched(s
  * queues or mq-deadline is not available, default to "none".
  */
 static struct elevator_type *elevator_get_default(struct request_queue *q)
-{
-	if (q->tag_set && q->tag_set->flags & BLK_MQ_F_NO_SCHED_BY_DEFAULT)
-		return NULL;
-
-	if (q->nr_hw_queues != 1 &&
-	    !blk_mq_is_shared_tags(q->tag_set->flags))
-		return NULL;
-
-	return elevator_find_get(q, "mq-deadline");
+{ 
+ 	if (q->nr_hw_queues != 1 &&
+ 	    !blk_mq_is_shared_tags(q->tag_set->flags))
++#if defined(CONFIG_MQ_IOSCHED_KYBER)
++		return elevator_find_get(q, "kyber");
++#else
++		return elevator_find_get(q, "mq-deadline");
++#endif
+ 
+ #if defined(CONFIG_IOSCHED_BFQ)
+ 	return elevator_find_get(q, "bfq");
 }
 
 /*
